%prod.url=https://comment.canitrunquarkus.org/

# Some limits to weed out the most obvious mayhem
quarkus.http.limits.max-header-size=8K
quarkus.http.limits.max-body-size=100K
quarkus.http.limits.max-parameters=20

# General
quarkus.log.level=INFO
quarkus.native.enable-https-url-handler=true

# Token hashes
token.hashes.file=./token-hashes.txt
%test.token.hashes.file=/tmp/test-token-hashes.txt

# Github API
my.github.api.url=https://api.github.com
my.github.api.token=Set in .env file

%test.my.github.api.url=http://localhost:8917
%test.my.github.api.token=ChangeitGitHub

polling.interval.seconds=60
%test.polling.interval.seconds=1
polling.workflow.runs.pages=50
yaml.workflow.name=Build
# e.g comment-data-8 for PR 8.
yaml.workflow.artifact.name.prefix=comment-data-
# When you start the app, you can process some older PR's workflows too.
lookback.seconds=600

# Comments
## Each interval, we process the comments batch
comments.batch.intervals.seconds=5
%test.comments.batch.intervals.seconds=1
## Might not be enough if more people start using it, but also throttles possible abuse.
comments.batch.size=5
## Not sure if it's practical to have longer comments.
comments.text.max.length=20000
## When the queue is full, we start rejecting new comments.
## It's likely that if this is not enough the service is being abused.
comments.max.queue.size=60
## If it's older, we just ditch it as no longer relevant; GitHub is likely down or something.
comments.max.age.seconds=600
## Append at the end of each comment to make it clear it's a robot.
comments.append.signature=\n\nComment posted by a robot. Responsible human: Karm.
